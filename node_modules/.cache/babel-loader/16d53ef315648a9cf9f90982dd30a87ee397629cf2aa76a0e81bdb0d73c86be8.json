{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-side\\\\user-side\\\\src\\\\Seats\\\\SeatList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import SelectedCarDetails from './SelectedCarDetails';\n// import TripDetailsCard from '../Listpage/TripDetailsCard';\n\n// // SeatList Component\n// const SeatList = () => {\n//   const [seats, setSeats] = useState([\n//     { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\n//     { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\n//     { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//   ]);\n\n//   const [passengers, setPassengers] = useState({});\n//   const [mainPassenger, setMainPassenger] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   // Payment Handling\n//   const handlePayment = async () => {\n//     if (!window.Razorpay) {\n//       alert('Razorpay is not loaded properly!');\n//       return;\n//     }\n\n//     const response = await fetch('http://localhost:5000/api/payments/create-order', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ totalAmount }),\n//     });\n\n//     const order = await response.json();\n//     if (!order?.id) {\n//       alert('Failed to create order');\n//       return;\n//     }\n\n//     const options = {\n//       key: 'rzp_test_vqDlqzfsth2zPW',\n//       amount: totalAmount * 100,\n//       currency: 'INR',\n//       name: 'The CabS',\n//       description: 'Booking Details',\n//       order_id: order.id,\n//       handler: async (response) => {\n//         const paymentDetails = {\n//           paymentId: response.razorpay_payment_id,\n//           orderId: response.razorpay_order_id,\n//           signature: response.razorpay_signature,\n//           paymentDetails: {\n//             method: 'Razorpay',\n//             status: 'success',\n//             amount: totalAmount,\n//             mainPassenger: passengers[mainPassenger],\n//             seatsBooked: selectedSeats,\n//             tripDetails: {\n//               fromLocation: 'Delhi',\n//               toLocation: 'Mumbai',\n//               pickupLocation: 'Rajiv Chowk',\n//               dropLocation: 'Andheri West',\n//               dateOfTrip: new Date(),\n//             },\n//           },\n//         };\n\n//         const captureResponse = await fetch('http://localhost:5000/api/payments/capture-payment', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(paymentDetails),\n//         });\n\n//         const result = await captureResponse.json();\n//         alert(result.success ? 'Payment successful' : 'Payment failed');\n//       },\n//       prefill: { name: 'Customer Name', email: 'customer@example.com', contact: '1234567890' },\n//       theme: { color: '#F37254' },\n//     };\n\n//     const rzp1 = new window.Razorpay(options);\n//     rzp1.open();\n//   };\n\n//   const handleSeatClick = (id) => {\n//     setSeats((prevSeats) =>\n//       prevSeats.map((seat) =>\n//         seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\n//       )\n//     );\n\n//     setPassengers((prevPassengers) => {\n//       const updatedPassengers = { ...prevPassengers };\n//       if (updatedPassengers[id]) delete updatedPassengers[id];\n//       else updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\n//       return updatedPassengers;\n//     });\n//   };\n\n//   const handleMainPassengerChange = (seatId) => {\n//     setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\n//     setPassengers((prevPassengers) => {\n//       const updatedPassengers = { ...prevPassengers };\n//       Object.keys(updatedPassengers).forEach((id) => {\n//         updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\n//       });\n//       return updatedPassengers;\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!mainPassenger) {\n//       setError('There Should be an One Main Passenger ! Please Fill.');\n//       return;\n//     }\n//     setError(null);\n//     setShowModal(true);\n//   };\n\n//   const closeModal = () => {\n//     setShowModal(false);\n//     navigate('/Seats');\n//   };\n\n//   const selectedSeats = seats.filter((seat) => seat.isSelected);\n//   const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\n\n//   return (\n//     <>\n//     <div className=\"flex justify-center p-4 w-full\">\n//   {/* Main Container */}\n//   <div className=\"flex flex-col md:flex-row gap-8 w-[85%]\">\n//     {/* First Div */}\n//     <div className=\"flex-[7] bg-white shadow-md rounded-lg overflow-hidden\">\n//       <SelectedCarDetails />\n//     </div>\n\n//     {/* Second Div */}\n//     <div className=\"flex-[3] shadow-md rounded-lg overflow-hidden\">\n//       <TripDetailsCard />\n//       <div className=\"p-4\">\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           {Object.entries(passengers).map(([seatId, passenger]) => (\n//             <div key={seatId} className=\"space-y-2\">\n//               <label\n//                 htmlFor={`name-${seatId}`}\n//                 className=\"block text-sm font-medium text-gray-700\"\n//               >\n//                 Passenger Name for Seat {seatId}\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 id={`name-${seatId}`}\n//                 value={passenger.name}\n//                 onChange={(e) =>\n//                   setPassengers((prev) => ({\n//                     ...prev,\n//                     [seatId]: { ...prev[seatId], name: e.target.value },\n//                   }))\n//                 }\n//                 required\n//                 className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n//               />\n//               <label className=\"inline-flex items-center mt-2\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={mainPassenger === seatId}\n//                   onChange={() => handleMainPassengerChange(seatId)}\n//                   className=\"form-checkbox text-blue-600\"\n//                 />\n//                 <span className=\"ml-2 text-sm text-gray-700\">\n//                   Set as Main Passenger\n//                 </span>\n//               </label>\n//               {mainPassenger === seatId && (\n//                 <div className=\"mt-2\">\n//                   <label\n//                     htmlFor={`email-${seatId}`}\n//                     className=\"block text-sm font-medium text-gray-700\"\n//                   >\n//                     Email\n//                   </label>\n//                   <input\n//                     type=\"email\"\n//                     id={`email-${seatId}`}\n//                     value={passenger.email}\n//                     onChange={(e) =>\n//                       setPassengers((prev) => ({\n//                         ...prev,\n//                         [seatId]: {\n//                           ...prev[seatId],\n//                           email: e.target.value,\n//                         },\n//                       }))\n//                     }\n//                     required\n//                     className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n//                   />\n//                   <label\n//                     htmlFor={`phone-${seatId}`}\n//                     className=\"block text-sm font-medium text-gray-700 mt-2\"\n//                   >\n//                     Phone Number\n//                   </label>\n//                   <input\n//                     type=\"tel\"\n//                     id={`phone-${seatId}`}\n//                     value={passenger.phone}\n//                     onChange={(e) =>\n//                       setPassengers((prev) => ({\n//                         ...prev,\n//                         [seatId]: {\n//                           ...prev[seatId],\n//                           phone: e.target.value,\n//                         },\n//                       }))\n//                     }\n//                     required\n//                     className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n//                   />\n//                 </div>\n//               )}\n//             </div>\n//           ))}\n\n//           {/* Error Message */}\n//           {error && (\n//             <div className=\"text-red-600 text-sm font-medium\">{error}</div>\n//           )}\n\n//           {/* No Seats Selected Message */}\n//           {selectedSeats.length === 0 && (\n//             <div className=\"bg-yellow-100 text-yellow-700 border border-yellow-400 rounded-md p-2 text-center\">\n//               Please select the seats for the trip.\n//             </div>\n//           )}\n\n//           {selectedSeats.length > 0 && (\n//             <button\n//               type=\"submit\"\n//               className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n//             >\n//               Book Seats\n//             </button>\n//           )}\n//         </form>\n//       </div>\n//       <div className=\"flex-1 bg-white shadow-md rounded-lg overflow-hidden\">\n//         <div className=\"bg-gray-100 px-4 py-2\">\n//           <h2 className=\"text-lg font-semibold\">Select Seats</h2>\n//         </div>\n//         <div className=\"p-4\">\n//           <div className=\"grid grid-rows-3 grid-cols-2 gap-4\">\n//             {seats.map((seat) => (\n//               <div key={seat.id} className=\"flex flex-col items-center\">\n//                 <button\n//                   onClick={() =>\n//                     !seat.isDisabled &&\n//                     !seat.isBooked &&\n//                     handleSeatClick(seat.id)\n//                   }\n//                   className={`h-16 w-16 rounded-md flex items-center justify-center text-lg font-semibold ${\n//                     seat.isSelected\n//                       ? \"bg-blue-600 text-white\"\n//                       : seat.isBooked\n//                       ? \"bg-red-600 text-white\"\n//                       : \"bg-white text-blue-600 border-2 border-blue-600\"\n//                   } ${\n//                     seat.isDisabled || seat.isBooked\n//                       ? \"opacity-50 cursor-not-allowed\"\n//                       : \"hover:bg-blue-100\"\n//                   }`}\n//                   disabled={seat.isDisabled || seat.isBooked}\n//                 >\n//                   {seat.id}\n//                 </button>\n//                 {!seat.isBooked && !seat.isDisabled && (\n//                   <span className=\"mt-2 text-sm text-gray-600\">\n//                     Rs. {seat.price}\n//                   </span>\n//                 )}\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   </div>\n\n//   {/* Modal */}\n//   {showModal && (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50\">\n//       <div className=\"bg-white w-11/12 max-w-3xl rounded-xl shadow-2xl p-8 relative animate-fade-in\">\n//         {/* Close Button */}\n//         <button\n//           onClick={closeModal}\n//           className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\n//         >\n//           &times;\n//         </button>\n\n//         <h3 className=\"text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">\n//           Booking Details\n//         </h3>\n\n//         {/* Main Passenger Details */}\n//         {mainPassenger && passengers[mainPassenger] && (\n//           <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\n//             <h4 className=\"text-xl font-semibold text-gray-700 mb-3\">\n//               Main Passenger Details\n//             </h4>\n//             <p className=\"text-gray-600\">\n//               <span className=\"font-semibold\">Name:</span>{\" \"}\n//               {passengers[mainPassenger].name}\n//             </p>\n//             <p className=\"text-gray-600\">\n//               <span className=\"font-semibold\">Email:</span>{\" \"}\n//               {passengers[mainPassenger].email}\n//             </p>\n//             <p className=\"text-gray-600\">\n//               <span className=\"font-semibold\">Phone:</span>{\" \"}\n//               {passengers[mainPassenger].phone}\n//             </p>\n//           </div>\n//         )}\n\n//         {/* Other Passengers Details */}\n//         {Object.entries(passengers)\n//           .filter(([seatId]) => seatId !== mainPassenger)\n//           .map(([seatId, passenger]) => (\n//             <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\n//               <h4 className=\"text-lg font-semibold text-gray-700 mb-2\">\n//                 Passenger for Seat {seatId}\n//               </h4>\n//               <p className=\"text-gray-600\">\n//                 <span className=\"font-semibold\">Name:</span>{\" \"}\n//                 {passenger.name || \"N/A\"}\n//               </p>\n//             </div>\n//           ))}\n\n//         <div className=\"space-y-3\">\n//           <p className=\"text-gray-600\">\n//             <span className=\"font-semibold\">From Location:</span> Delhi\n//           </p>\n//           <p className=\"text-gray-600\">\n//             <span className=\"font-semibold\">To Location:</span> Mumbai\n//           </p>\n//           <p className=\"text-gray-600\">\n//             <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\n//           </p>\n//           <p className=\"text-gray-600\">\n//             <span className=\"font-semibold\">Drop Location:</span> Andheri West\n//           </p>\n//           <p className=\"text-gray-600\">\n//             <span className=\"font-semibold\">Date of Trip:</span>{\" \"}\n//             {new Date().toLocaleDateString()}\n//           </p>\n//           <p className=\"text-gray-600\">\n//             <span className=\"font-semibold\">Seats Booked:</span>{\" \"}\n//             {selectedSeats.map((seat) => seat.id).join(\", \")}\n//           </p>\n//           <p className=\"text-gray-600 text-lg font-medium\">\n//             <span className=\"font-semibold\">Total Amount Payable:</span> Rs.{\" \"}\n//             {totalAmount}\n//           </p>\n//         </div>\n\n//         <button\n//           onClick={handlePayment}\n//           className=\"mt-6 w-full py-3 px-6 bg-blue-600 text-white text-lg font-medium rounded-lg shadow-md hover:bg-blue-700 transition duration-300\"\n//         >\n//           Pay Now\n//         </button>\n//       </div>\n//     </div>\n//   )}\n// </div>\n\n//     </>\n//   );\n// };\n\n// export default SeatList;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SelectedCarDetails from './SelectedCarDetails';\nimport TripDetailsCard from '../Listpage/TripDetailsCard';\n\n// SeatList Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SeatList = () => {\n  _s();\n  const [seats, setSeats] = useState([{\n    id: 'L1',\n    isSelected: false,\n    isDisabled: false,\n    isBooked: false,\n    price: 1200\n  }, {\n    id: 'R1',\n    isSelected: false,\n    isDisabled: true,\n    isBooked: false,\n    price: 1200\n  }, {\n    id: 'L2',\n    isSelected: false,\n    isDisabled: false,\n    isBooked: false,\n    price: 1200\n  }, {\n    id: 'R2',\n    isSelected: false,\n    isDisabled: false,\n    isBooked: false,\n    price: 1200\n  }, {\n    id: 'L3',\n    isSelected: false,\n    isDisabled: false,\n    isBooked: true,\n    price: 1200\n  }, {\n    id: 'R3',\n    isSelected: false,\n    isDisabled: false,\n    isBooked: false,\n    price: 1200\n  }]);\n  const [passengers, setPassengers] = useState({});\n  const [mainPassenger, setMainPassenger] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [paymentDetails, setPaymentDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Payment Handling\n  // const handlePayment = async () => {\n  //   if (!window.Razorpay) {\n  //     alert('Razorpay is not loaded properly!');\n  //     return;\n  //   }\n\n  //   const response = await fetch('http://localhost:5000/api/payments/create-order', {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify({ totalAmount }),\n  //   });\n\n  //   const order = await response.json();\n  //   if (!order?.id) {\n  //     alert('Failed to create order');\n  //     return;\n  //   }\n\n  //   const options = {\n  //     key: 'rzp_test_vqDlqzfsth2zPW',\n  //     amount: totalAmount * 100,\n  //     currency: 'INR',\n  //     name: 'The CabS',\n  //     description: 'Booking Details',\n  //     order_id: order.id,\n  //     handler: async (response) => {\n  //       const paymentDetails = {\n  //         paymentId: response.razorpay_payment_id,\n  //         orderId: response.razorpay_order_id,\n  //         signature: response.razorpay_signature,\n  //         paymentDetails: {\n  //           method: 'Razorpay',\n  //           status: 'success',\n  //           amount: totalAmount,\n  //           mainPassenger: passengers[mainPassenger],\n  //           seatsBooked: selectedSeats,\n  //           tripDetails: {\n  //             fromLocation: 'Delhi',\n  //             toLocation: 'Mumbai',\n  //             pickupLocation: 'Rajiv Chowk',\n  //             dropLocation: 'Andheri West',\n  //             dateOfTrip: new Date(),\n  //           },\n  //         },\n  //       };\n\n  //       const captureResponse = await fetch('http://localhost:5000/api/payments/capture-payment', {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify(paymentDetails),\n  //       });\n\n  //       const result = await captureResponse.json();\n  //       alert(result.success ? 'Payment successful' : 'Payment failed');\n  //     },\n  //     prefill: { name: 'Customer Name', email: 'customer@example.com', contact: '1234567890' },\n  //     theme: { color: '#F37254' },\n  //   };\n\n  //   const rzp1 = new window.Razorpay(options);\n  //   rzp1.open();\n  // };\n\n  const handleSeatClick = id => {\n    setSeats(prevSeats => prevSeats.map(seat => seat.id === id ? {\n      ...seat,\n      isSelected: !seat.isSelected\n    } : seat));\n    setPassengers(prevPassengers => {\n      const updatedPassengers = {\n        ...prevPassengers\n      };\n      if (updatedPassengers[id]) delete updatedPassengers[id];else updatedPassengers[id] = {\n        name: '',\n        email: '',\n        phone: '',\n        isMain: false\n      };\n      return updatedPassengers;\n    });\n  };\n  const handleMainPassengerChange = seatId => {\n    setMainPassenger(prevMain => prevMain === seatId ? null : seatId);\n    setPassengers(prevPassengers => {\n      const updatedPassengers = {\n        ...prevPassengers\n      };\n      Object.keys(updatedPassengers).forEach(id => {\n        updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\n      });\n      return updatedPassengers;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!mainPassenger) {\n      setError('There Should be One Main Passenger! Please Fill.');\n      return;\n    }\n    setError(null);\n    await initiateRazorpay();\n  };\n  const initiateRazorpay = async () => {\n    try {\n      const response = await fetch('/api/payment/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: totalAmount\n        })\n      });\n      const data = await response.json();\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: totalAmount * 100,\n        // Convert to paise\n        currency: 'INR',\n        order_id: data.id,\n        handler: async response => {\n          const paymentDetails = {\n            paymentId: response.razorpay_payment_id,\n            orderId: data.id,\n            signature: response.razorpay_signature,\n            mainPassenger: passengers[mainPassenger],\n            passengers: Object.values(passengers),\n            tripDetails: {\n              fromLocation: 'Delhi',\n              toLocation: 'Mumbai',\n              pickupLocation: 'Rajiv Chowk',\n              dropLocation: 'Andheri West',\n              dateOfTrip: new Date().toLocaleDateString(),\n              totalAmount: totalAmount\n            }\n          };\n          const verifyResponse = await fetch('/api/payment/verify-payment', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(paymentDetails)\n          });\n          const result = await verifyResponse.json();\n          setPaymentDetails(paymentDetails);\n          setShowModal(true);\n        },\n        prefill: {\n          name: passengers[mainPassenger].name\n        },\n        notes: {\n          address: 'Razorpay Test'\n        },\n        theme: {\n          color: '#F37254'\n        }\n      };\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n    } catch (err) {\n      console.error('Payment initiation failed', err);\n    }\n  };\n  const totalAmount = seats.reduce((sum, seat) => seat.isSelected ? sum + seat.price : sum, 0);\n  const closeModal = () => {\n    setShowModal(false);\n    navigate('/Seats');\n  };\n  const selectedSeats = seats.filter(seat => seat.isSelected);\n  // const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center p-4 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-8 w-[85%]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-[7] bg-white shadow-md rounded-lg overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(SelectedCarDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-[3] shadow-md rounded-lg overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(TripDetailsCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"space-y-4\",\n              children: [Object.entries(passengers).map(([seatId, passenger]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `name-${seatId}`,\n                  className: \"block text-sm font-medium text-gray-700\",\n                  children: [\"Passenger Name for Seat \", seatId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: `name-${seatId}`,\n                  value: passenger.name,\n                  onChange: e => setPassengers(prev => ({\n                    ...prev,\n                    [seatId]: {\n                      ...prev[seatId],\n                      name: e.target.value\n                    }\n                  })),\n                  required: true,\n                  className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"inline-flex items-center mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: mainPassenger === seatId,\n                    onChange: () => handleMainPassengerChange(seatId),\n                    className: \"form-checkbox text-blue-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-sm text-gray-700\",\n                    children: \"Set as Main Passenger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 15\n                }, this), mainPassenger === seatId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `email-${seatId}`,\n                    className: \"block text-sm font-medium text-gray-700\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: `email-${seatId}`,\n                    value: passenger.email,\n                    onChange: e => setPassengers(prev => ({\n                      ...prev,\n                      [seatId]: {\n                        ...prev[seatId],\n                        email: e.target.value\n                      }\n                    })),\n                    required: true,\n                    className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `phone-${seatId}`,\n                    className: \"block text-sm font-medium text-gray-700 mt-2\",\n                    children: \"Phone Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"tel\",\n                    id: `phone-${seatId}`,\n                    value: passenger.phone,\n                    onChange: e => setPassengers(prev => ({\n                      ...prev,\n                      [seatId]: {\n                        ...prev[seatId],\n                        phone: e.target.value\n                      }\n                    })),\n                    required: true,\n                    className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 17\n                }, this)]\n              }, seatId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 13\n              }, this)), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-red-600 text-sm font-medium\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 13\n              }, this), selectedSeats.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-yellow-100 text-yellow-700 border border-yellow-400 rounded-md p-2 text-center\",\n                children: \"Please select the seats for the trip.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 13\n              }, this), selectedSeats.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n                children: \"Book Seats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 bg-white shadow-md rounded-lg overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 px-4 py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold\",\n                children: \"Select Seats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-rows-3 grid-cols-2 gap-4\",\n                children: seats.map(seat => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => !seat.isDisabled && !seat.isBooked && handleSeatClick(seat.id),\n                    className: `h-16 w-16 rounded-md flex items-center justify-center text-lg font-semibold ${seat.isSelected ? \"bg-blue-600 text-white\" : seat.isBooked ? \"bg-red-600 text-white\" : \"bg-white text-blue-600 border-2 border-blue-600\"} ${seat.isDisabled || seat.isBooked ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-blue-100\"}`,\n                    disabled: seat.isDisabled || seat.isBooked,\n                    children: seat.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 17\n                  }, this), !seat.isBooked && !seat.isDisabled && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mt-2 text-sm text-gray-600\",\n                    children: [\"Rs. \", seat.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 19\n                  }, this)]\n                }, seat.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 3\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white w-11/12 max-w-3xl rounded-xl shadow-2xl p-8 relative animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-bold text-gray-800 mb-6 border-b pb-2\",\n            children: \"Booking Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 9\n          }, this), mainPassenger && passengers[mainPassenger] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 p-4 rounded-md mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xl font-semibold text-gray-700 mb-3\",\n              children: \"Main Passenger Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 15\n              }, this), \" \", passengers[mainPassenger].name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 15\n              }, this), \" \", passengers[mainPassenger].email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 15\n              }, this), \" \", passengers[mainPassenger].phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 11\n          }, this), Object.entries(passengers).filter(([seatId]) => seatId !== mainPassenger).map(([seatId, passenger]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-4 rounded-md mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold text-gray-700 mb-2\",\n              children: [\"Passenger for Seat \", seatId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this), \" \", passenger.name || \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 15\n            }, this)]\n          }, seatId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"From Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 13\n              }, this), \" Delhi\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"To Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 13\n              }, this), \" Mumbai\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Pickup Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 13\n              }, this), \" Rajiv Chowk\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Drop Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 13\n              }, this), \" Andheri West\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Date of Trip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 13\n              }, this), \" \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Seats Booked:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 13\n              }, this), \" \", selectedSeats.map(seat => seat.id).join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-lg font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Total Amount Payable:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 13\n              }, this), \" Rs.\", \" \", totalAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePayment,\n            className: \"mt-6 w-full py-3 px-6 bg-blue-600 text-white text-lg font-medium rounded-lg shadow-md hover:bg-blue-700 transition duration-300\",\n            children: \"Pay Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(SeatList, \"ObSdu8x0G+wUjJ2xdCAcKqciRlw=\", false, function () {\n  return [useNavigate];\n});\n_c = SeatList;\nexport default SeatList;\nvar _c;\n$RefreshReg$(_c, \"SeatList\");","map":{"version":3,"names":["React","useState","useNavigate","SelectedCarDetails","TripDetailsCard","jsxDEV","_jsxDEV","Fragment","_Fragment","SeatList","_s","seats","setSeats","id","isSelected","isDisabled","isBooked","price","passengers","setPassengers","mainPassenger","setMainPassenger","showModal","setShowModal","paymentDetails","setPaymentDetails","error","setError","navigate","handleSeatClick","prevSeats","map","seat","prevPassengers","updatedPassengers","name","email","phone","isMain","handleMainPassengerChange","seatId","prevMain","Object","keys","forEach","handleSubmit","e","preventDefault","initiateRazorpay","response","fetch","method","headers","body","JSON","stringify","amount","totalAmount","data","json","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","currency","order_id","handler","paymentId","razorpay_payment_id","orderId","signature","razorpay_signature","values","tripDetails","fromLocation","toLocation","pickupLocation","dropLocation","dateOfTrip","Date","toLocaleDateString","verifyResponse","result","prefill","notes","address","theme","color","razorpay","window","Razorpay","open","err","console","reduce","sum","closeModal","selectedSeats","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","entries","passenger","htmlFor","type","value","onChange","prev","target","required","checked","length","onClick","disabled","join","handlePayment","_c","$RefreshReg$"],"sources":["D:/user-side/user-side/src/Seats/SeatList.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import SelectedCarDetails from './SelectedCarDetails';\r\n// import TripDetailsCard from '../Listpage/TripDetailsCard';\r\n\r\n// // SeatList Component\r\n// const SeatList = () => {\r\n//   const [seats, setSeats] = useState([\r\n//     { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\r\n//     { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\r\n//     { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//   ]);\r\n\r\n//   const [passengers, setPassengers] = useState({});\r\n//   const [mainPassenger, setMainPassenger] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Payment Handling\r\n//   const handlePayment = async () => {\r\n//     if (!window.Razorpay) {\r\n//       alert('Razorpay is not loaded properly!');\r\n//       return;\r\n//     }\r\n\r\n//     const response = await fetch('http://localhost:5000/api/payments/create-order', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ totalAmount }),\r\n//     });\r\n\r\n//     const order = await response.json();\r\n//     if (!order?.id) {\r\n//       alert('Failed to create order');\r\n//       return;\r\n//     }\r\n\r\n//     const options = {\r\n//       key: 'rzp_test_vqDlqzfsth2zPW',\r\n//       amount: totalAmount * 100,\r\n//       currency: 'INR',\r\n//       name: 'The CabS',\r\n//       description: 'Booking Details',\r\n//       order_id: order.id,\r\n//       handler: async (response) => {\r\n//         const paymentDetails = {\r\n//           paymentId: response.razorpay_payment_id,\r\n//           orderId: response.razorpay_order_id,\r\n//           signature: response.razorpay_signature,\r\n//           paymentDetails: {\r\n//             method: 'Razorpay',\r\n//             status: 'success',\r\n//             amount: totalAmount,\r\n//             mainPassenger: passengers[mainPassenger],\r\n//             seatsBooked: selectedSeats,\r\n//             tripDetails: {\r\n//               fromLocation: 'Delhi',\r\n//               toLocation: 'Mumbai',\r\n//               pickupLocation: 'Rajiv Chowk',\r\n//               dropLocation: 'Andheri West',\r\n//               dateOfTrip: new Date(),\r\n//             },\r\n//           },\r\n//         };\r\n\r\n//         const captureResponse = await fetch('http://localhost:5000/api/payments/capture-payment', {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify(paymentDetails),\r\n//         });\r\n\r\n//         const result = await captureResponse.json();\r\n//         alert(result.success ? 'Payment successful' : 'Payment failed');\r\n//       },\r\n//       prefill: { name: 'Customer Name', email: 'customer@example.com', contact: '1234567890' },\r\n//       theme: { color: '#F37254' },\r\n//     };\r\n\r\n//     const rzp1 = new window.Razorpay(options);\r\n//     rzp1.open();\r\n//   };\r\n\r\n//   const handleSeatClick = (id) => {\r\n//     setSeats((prevSeats) =>\r\n//       prevSeats.map((seat) =>\r\n//         seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\r\n//       )\r\n//     );\r\n\r\n//     setPassengers((prevPassengers) => {\r\n//       const updatedPassengers = { ...prevPassengers };\r\n//       if (updatedPassengers[id]) delete updatedPassengers[id];\r\n//       else updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\r\n//       return updatedPassengers;\r\n//     });\r\n//   };\r\n\r\n//   const handleMainPassengerChange = (seatId) => {\r\n//     setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\r\n//     setPassengers((prevPassengers) => {\r\n//       const updatedPassengers = { ...prevPassengers };\r\n//       Object.keys(updatedPassengers).forEach((id) => {\r\n//         updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\r\n//       });\r\n//       return updatedPassengers;\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!mainPassenger) {\r\n//       setError('There Should be an One Main Passenger ! Please Fill.');\r\n//       return;\r\n//     }\r\n//     setError(null);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setShowModal(false);\r\n//     navigate('/Seats');\r\n//   };\r\n\r\n//   const selectedSeats = seats.filter((seat) => seat.isSelected);\r\n//   const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\r\n\r\n//   return (\r\n//     <>\r\n//     <div className=\"flex justify-center p-4 w-full\">\r\n//   {/* Main Container */}\r\n//   <div className=\"flex flex-col md:flex-row gap-8 w-[85%]\">\r\n//     {/* First Div */}\r\n//     <div className=\"flex-[7] bg-white shadow-md rounded-lg overflow-hidden\">\r\n//       <SelectedCarDetails />\r\n//     </div>\r\n\r\n//     {/* Second Div */}\r\n//     <div className=\"flex-[3] shadow-md rounded-lg overflow-hidden\">\r\n//       <TripDetailsCard />\r\n//       <div className=\"p-4\">\r\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//           {Object.entries(passengers).map(([seatId, passenger]) => (\r\n//             <div key={seatId} className=\"space-y-2\">\r\n//               <label\r\n//                 htmlFor={`name-${seatId}`}\r\n//                 className=\"block text-sm font-medium text-gray-700\"\r\n//               >\r\n//                 Passenger Name for Seat {seatId}\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id={`name-${seatId}`}\r\n//                 value={passenger.name}\r\n//                 onChange={(e) =>\r\n//                   setPassengers((prev) => ({\r\n//                     ...prev,\r\n//                     [seatId]: { ...prev[seatId], name: e.target.value },\r\n//                   }))\r\n//                 }\r\n//                 required\r\n//                 className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\r\n//               />\r\n//               <label className=\"inline-flex items-center mt-2\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={mainPassenger === seatId}\r\n//                   onChange={() => handleMainPassengerChange(seatId)}\r\n//                   className=\"form-checkbox text-blue-600\"\r\n//                 />\r\n//                 <span className=\"ml-2 text-sm text-gray-700\">\r\n//                   Set as Main Passenger\r\n//                 </span>\r\n//               </label>\r\n//               {mainPassenger === seatId && (\r\n//                 <div className=\"mt-2\">\r\n//                   <label\r\n//                     htmlFor={`email-${seatId}`}\r\n//                     className=\"block text-sm font-medium text-gray-700\"\r\n//                   >\r\n//                     Email\r\n//                   </label>\r\n//                   <input\r\n//                     type=\"email\"\r\n//                     id={`email-${seatId}`}\r\n//                     value={passenger.email}\r\n//                     onChange={(e) =>\r\n//                       setPassengers((prev) => ({\r\n//                         ...prev,\r\n//                         [seatId]: {\r\n//                           ...prev[seatId],\r\n//                           email: e.target.value,\r\n//                         },\r\n//                       }))\r\n//                     }\r\n//                     required\r\n//                     className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\r\n//                   />\r\n//                   <label\r\n//                     htmlFor={`phone-${seatId}`}\r\n//                     className=\"block text-sm font-medium text-gray-700 mt-2\"\r\n//                   >\r\n//                     Phone Number\r\n//                   </label>\r\n//                   <input\r\n//                     type=\"tel\"\r\n//                     id={`phone-${seatId}`}\r\n//                     value={passenger.phone}\r\n//                     onChange={(e) =>\r\n//                       setPassengers((prev) => ({\r\n//                         ...prev,\r\n//                         [seatId]: {\r\n//                           ...prev[seatId],\r\n//                           phone: e.target.value,\r\n//                         },\r\n//                       }))\r\n//                     }\r\n//                     required\r\n//                     className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\r\n//                   />\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n\r\n//           {/* Error Message */}\r\n//           {error && (\r\n//             <div className=\"text-red-600 text-sm font-medium\">{error}</div>\r\n//           )}\r\n\r\n//           {/* No Seats Selected Message */}\r\n//           {selectedSeats.length === 0 && (\r\n//             <div className=\"bg-yellow-100 text-yellow-700 border border-yellow-400 rounded-md p-2 text-center\">\r\n//               Please select the seats for the trip.\r\n//             </div>\r\n//           )}\r\n\r\n//           {selectedSeats.length > 0 && (\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n//             >\r\n//               Book Seats\r\n//             </button>\r\n//           )}\r\n//         </form>\r\n//       </div>\r\n//       <div className=\"flex-1 bg-white shadow-md rounded-lg overflow-hidden\">\r\n//         <div className=\"bg-gray-100 px-4 py-2\">\r\n//           <h2 className=\"text-lg font-semibold\">Select Seats</h2>\r\n//         </div>\r\n//         <div className=\"p-4\">\r\n//           <div className=\"grid grid-rows-3 grid-cols-2 gap-4\">\r\n//             {seats.map((seat) => (\r\n//               <div key={seat.id} className=\"flex flex-col items-center\">\r\n//                 <button\r\n//                   onClick={() =>\r\n//                     !seat.isDisabled &&\r\n//                     !seat.isBooked &&\r\n//                     handleSeatClick(seat.id)\r\n//                   }\r\n//                   className={`h-16 w-16 rounded-md flex items-center justify-center text-lg font-semibold ${\r\n//                     seat.isSelected\r\n//                       ? \"bg-blue-600 text-white\"\r\n//                       : seat.isBooked\r\n//                       ? \"bg-red-600 text-white\"\r\n//                       : \"bg-white text-blue-600 border-2 border-blue-600\"\r\n//                   } ${\r\n//                     seat.isDisabled || seat.isBooked\r\n//                       ? \"opacity-50 cursor-not-allowed\"\r\n//                       : \"hover:bg-blue-100\"\r\n//                   }`}\r\n//                   disabled={seat.isDisabled || seat.isBooked}\r\n//                 >\r\n//                   {seat.id}\r\n//                 </button>\r\n//                 {!seat.isBooked && !seat.isDisabled && (\r\n//                   <span className=\"mt-2 text-sm text-gray-600\">\r\n//                     Rs. {seat.price}\r\n//                   </span>\r\n//                 )}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n\r\n//   {/* Modal */}\r\n//   {showModal && (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50\">\r\n//       <div className=\"bg-white w-11/12 max-w-3xl rounded-xl shadow-2xl p-8 relative animate-fade-in\">\r\n//         {/* Close Button */}\r\n//         <button\r\n//           onClick={closeModal}\r\n//           className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\r\n//         >\r\n//           &times;\r\n//         </button>\r\n\r\n//         <h3 className=\"text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">\r\n//           Booking Details\r\n//         </h3>\r\n\r\n//         {/* Main Passenger Details */}\r\n//         {mainPassenger && passengers[mainPassenger] && (\r\n//           <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\r\n//             <h4 className=\"text-xl font-semibold text-gray-700 mb-3\">\r\n//               Main Passenger Details\r\n//             </h4>\r\n//             <p className=\"text-gray-600\">\r\n//               <span className=\"font-semibold\">Name:</span>{\" \"}\r\n//               {passengers[mainPassenger].name}\r\n//             </p>\r\n//             <p className=\"text-gray-600\">\r\n//               <span className=\"font-semibold\">Email:</span>{\" \"}\r\n//               {passengers[mainPassenger].email}\r\n//             </p>\r\n//             <p className=\"text-gray-600\">\r\n//               <span className=\"font-semibold\">Phone:</span>{\" \"}\r\n//               {passengers[mainPassenger].phone}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Other Passengers Details */}\r\n//         {Object.entries(passengers)\r\n//           .filter(([seatId]) => seatId !== mainPassenger)\r\n//           .map(([seatId, passenger]) => (\r\n//             <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\r\n//               <h4 className=\"text-lg font-semibold text-gray-700 mb-2\">\r\n//                 Passenger for Seat {seatId}\r\n//               </h4>\r\n//               <p className=\"text-gray-600\">\r\n//                 <span className=\"font-semibold\">Name:</span>{\" \"}\r\n//                 {passenger.name || \"N/A\"}\r\n//               </p>\r\n//             </div>\r\n//           ))}\r\n\r\n//         <div className=\"space-y-3\">\r\n//           <p className=\"text-gray-600\">\r\n//             <span className=\"font-semibold\">From Location:</span> Delhi\r\n//           </p>\r\n//           <p className=\"text-gray-600\">\r\n//             <span className=\"font-semibold\">To Location:</span> Mumbai\r\n//           </p>\r\n//           <p className=\"text-gray-600\">\r\n//             <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\r\n//           </p>\r\n//           <p className=\"text-gray-600\">\r\n//             <span className=\"font-semibold\">Drop Location:</span> Andheri West\r\n//           </p>\r\n//           <p className=\"text-gray-600\">\r\n//             <span className=\"font-semibold\">Date of Trip:</span>{\" \"}\r\n//             {new Date().toLocaleDateString()}\r\n//           </p>\r\n//           <p className=\"text-gray-600\">\r\n//             <span className=\"font-semibold\">Seats Booked:</span>{\" \"}\r\n//             {selectedSeats.map((seat) => seat.id).join(\", \")}\r\n//           </p>\r\n//           <p className=\"text-gray-600 text-lg font-medium\">\r\n//             <span className=\"font-semibold\">Total Amount Payable:</span> Rs.{\" \"}\r\n//             {totalAmount}\r\n//           </p>\r\n//         </div>\r\n\r\n//         <button\r\n//           onClick={handlePayment}\r\n//           className=\"mt-6 w-full py-3 px-6 bg-blue-600 text-white text-lg font-medium rounded-lg shadow-md hover:bg-blue-700 transition duration-300\"\r\n//         >\r\n//           Pay Now\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   )}\r\n// </div>\r\n\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SeatList;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SelectedCarDetails from './SelectedCarDetails';\r\nimport TripDetailsCard from '../Listpage/TripDetailsCard';\r\n\r\n// SeatList Component\r\nconst SeatList = () => {\r\n  const [seats, setSeats] = useState([\r\n    { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n    { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\r\n    { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n    { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n    { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\r\n    { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n  ]);\r\n\r\n  const [passengers, setPassengers] = useState({});\r\n  const [mainPassenger, setMainPassenger] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [paymentDetails, setPaymentDetails] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Payment Handling\r\n  // const handlePayment = async () => {\r\n  //   if (!window.Razorpay) {\r\n  //     alert('Razorpay is not loaded properly!');\r\n  //     return;\r\n  //   }\r\n\r\n  //   const response = await fetch('http://localhost:5000/api/payments/create-order', {\r\n  //     method: 'POST',\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({ totalAmount }),\r\n  //   });\r\n\r\n  //   const order = await response.json();\r\n  //   if (!order?.id) {\r\n  //     alert('Failed to create order');\r\n  //     return;\r\n  //   }\r\n\r\n  //   const options = {\r\n  //     key: 'rzp_test_vqDlqzfsth2zPW',\r\n  //     amount: totalAmount * 100,\r\n  //     currency: 'INR',\r\n  //     name: 'The CabS',\r\n  //     description: 'Booking Details',\r\n  //     order_id: order.id,\r\n  //     handler: async (response) => {\r\n  //       const paymentDetails = {\r\n  //         paymentId: response.razorpay_payment_id,\r\n  //         orderId: response.razorpay_order_id,\r\n  //         signature: response.razorpay_signature,\r\n  //         paymentDetails: {\r\n  //           method: 'Razorpay',\r\n  //           status: 'success',\r\n  //           amount: totalAmount,\r\n  //           mainPassenger: passengers[mainPassenger],\r\n  //           seatsBooked: selectedSeats,\r\n  //           tripDetails: {\r\n  //             fromLocation: 'Delhi',\r\n  //             toLocation: 'Mumbai',\r\n  //             pickupLocation: 'Rajiv Chowk',\r\n  //             dropLocation: 'Andheri West',\r\n  //             dateOfTrip: new Date(),\r\n  //           },\r\n  //         },\r\n  //       };\r\n\r\n  //       const captureResponse = await fetch('http://localhost:5000/api/payments/capture-payment', {\r\n  //         method: 'POST',\r\n  //         headers: { 'Content-Type': 'application/json' },\r\n  //         body: JSON.stringify(paymentDetails),\r\n  //       });\r\n\r\n  //       const result = await captureResponse.json();\r\n  //       alert(result.success ? 'Payment successful' : 'Payment failed');\r\n  //     },\r\n  //     prefill: { name: 'Customer Name', email: 'customer@example.com', contact: '1234567890' },\r\n  //     theme: { color: '#F37254' },\r\n  //   };\r\n\r\n  //   const rzp1 = new window.Razorpay(options);\r\n  //   rzp1.open();\r\n  // };\r\n\r\n  const handleSeatClick = (id) => {\r\n    setSeats((prevSeats) =>\r\n      prevSeats.map((seat) =>\r\n        seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\r\n      )\r\n    );\r\n\r\n    setPassengers((prevPassengers) => {\r\n      const updatedPassengers = { ...prevPassengers };\r\n      if (updatedPassengers[id]) delete updatedPassengers[id];\r\n      else updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\r\n      return updatedPassengers;\r\n    });\r\n  };\r\n\r\n  const handleMainPassengerChange = (seatId) => {\r\n    setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\r\n    setPassengers((prevPassengers) => {\r\n      const updatedPassengers = { ...prevPassengers };\r\n      Object.keys(updatedPassengers).forEach((id) => {\r\n        updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\r\n      });\r\n      return updatedPassengers;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!mainPassenger) {\r\n      setError('There Should be One Main Passenger! Please Fill.');\r\n      return;\r\n    }\r\n    setError(null);\r\n    await initiateRazorpay();\r\n  };\r\n\r\n  const initiateRazorpay = async () => {\r\n    try {\r\n      const response = await fetch('/api/payment/create-order', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ amount: totalAmount }),\r\n      });\r\n      const data = await response.json();\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: totalAmount * 100, // Convert to paise\r\n        currency: 'INR',\r\n        order_id: data.id,\r\n        handler: async (response) => {\r\n          const paymentDetails = {\r\n            paymentId: response.razorpay_payment_id,\r\n            orderId: data.id,\r\n            signature: response.razorpay_signature,\r\n            mainPassenger: passengers[mainPassenger],\r\n            passengers: Object.values(passengers),\r\n            tripDetails: {\r\n              fromLocation: 'Delhi',\r\n              toLocation: 'Mumbai',\r\n              pickupLocation: 'Rajiv Chowk',\r\n              dropLocation: 'Andheri West',\r\n              dateOfTrip: new Date().toLocaleDateString(),\r\n              totalAmount: totalAmount,\r\n            },\r\n          };\r\n          const verifyResponse = await fetch('/api/payment/verify-payment', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(paymentDetails),\r\n          });\r\n          const result = await verifyResponse.json();\r\n          setPaymentDetails(paymentDetails);\r\n          setShowModal(true);\r\n        },\r\n        prefill: { name: passengers[mainPassenger].name },\r\n        notes: { address: 'Razorpay Test' },\r\n        theme: { color: '#F37254' },\r\n      };\r\n      const razorpay = new window.Razorpay(options);\r\n      razorpay.open();\r\n    } catch (err) {\r\n      console.error('Payment initiation failed', err);\r\n    }\r\n  };\r\n\r\n  const totalAmount = seats.reduce((sum, seat) => seat.isSelected ? sum + seat.price : sum, 0);\r\n\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    navigate('/Seats');\r\n  };\r\n\r\n  const selectedSeats = seats.filter((seat) => seat.isSelected);\r\n  // const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"flex justify-center p-4 w-full\">\r\n  {/* Main Container */}\r\n  <div className=\"flex flex-col md:flex-row gap-8 w-[85%]\">\r\n    {/* First Div */}\r\n    <div className=\"flex-[7] bg-white shadow-md rounded-lg overflow-hidden\">\r\n      <SelectedCarDetails />\r\n    </div>\r\n\r\n    {/* Second Div */}\r\n    <div className=\"flex-[3] shadow-md rounded-lg overflow-hidden\">\r\n      <TripDetailsCard />\r\n      <div className=\"p-4\">\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {Object.entries(passengers).map(([seatId, passenger]) => (\r\n            <div key={seatId} className=\"space-y-2\">\r\n              <label\r\n                htmlFor={`name-${seatId}`}\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Passenger Name for Seat {seatId}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id={`name-${seatId}`}\r\n                value={passenger.name}\r\n                onChange={(e) =>\r\n                  setPassengers((prev) => ({\r\n                    ...prev,\r\n                    [seatId]: { ...prev[seatId], name: e.target.value },\r\n                  }))\r\n                }\r\n                required\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\r\n              />\r\n              <label className=\"inline-flex items-center mt-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={mainPassenger === seatId}\r\n                  onChange={() => handleMainPassengerChange(seatId)}\r\n                  className=\"form-checkbox text-blue-600\"\r\n                />\r\n                <span className=\"ml-2 text-sm text-gray-700\">\r\n                  Set as Main Passenger\r\n                </span>\r\n              </label>\r\n              {mainPassenger === seatId && (\r\n                <div className=\"mt-2\">\r\n                  <label\r\n                    htmlFor={`email-${seatId}`}\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id={`email-${seatId}`}\r\n                    value={passenger.email}\r\n                    onChange={(e) =>\r\n                      setPassengers((prev) => ({\r\n                        ...prev,\r\n                        [seatId]: {\r\n                          ...prev[seatId],\r\n                          email: e.target.value,\r\n                        },\r\n                      }))\r\n                    }\r\n                    required\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\r\n                  />\r\n                  <label\r\n                    htmlFor={`phone-${seatId}`}\r\n                    className=\"block text-sm font-medium text-gray-700 mt-2\"\r\n                  >\r\n                    Phone Number\r\n                  </label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    id={`phone-${seatId}`}\r\n                    value={passenger.phone}\r\n                    onChange={(e) =>\r\n                      setPassengers((prev) => ({\r\n                        ...prev,\r\n                        [seatId]: {\r\n                          ...prev[seatId],\r\n                          phone: e.target.value,\r\n                        },\r\n                      }))\r\n                    }\r\n                    required\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"text-red-600 text-sm font-medium\">{error}</div>\r\n          )}\r\n\r\n          {/* No Seats Selected Message */}\r\n          {selectedSeats.length === 0 && (\r\n            <div className=\"bg-yellow-100 text-yellow-700 border border-yellow-400 rounded-md p-2 text-center\">\r\n              Please select the seats for the trip.\r\n            </div>\r\n          )}\r\n\r\n          {selectedSeats.length > 0 && (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              Book Seats\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <div className=\"flex-1 bg-white shadow-md rounded-lg overflow-hidden\">\r\n        <div className=\"bg-gray-100 px-4 py-2\">\r\n          <h2 className=\"text-lg font-semibold\">Select Seats</h2>\r\n        </div>\r\n        <div className=\"p-4\">\r\n          <div className=\"grid grid-rows-3 grid-cols-2 gap-4\">\r\n            {seats.map((seat) => (\r\n              <div key={seat.id} className=\"flex flex-col items-center\">\r\n                <button\r\n                  onClick={() =>\r\n                    !seat.isDisabled &&\r\n                    !seat.isBooked &&\r\n                    handleSeatClick(seat.id)\r\n                  }\r\n                  className={`h-16 w-16 rounded-md flex items-center justify-center text-lg font-semibold ${\r\n                    seat.isSelected\r\n                      ? \"bg-blue-600 text-white\"\r\n                      : seat.isBooked\r\n                      ? \"bg-red-600 text-white\"\r\n                      : \"bg-white text-blue-600 border-2 border-blue-600\"\r\n                  } ${\r\n                    seat.isDisabled || seat.isBooked\r\n                      ? \"opacity-50 cursor-not-allowed\"\r\n                      : \"hover:bg-blue-100\"\r\n                  }`}\r\n                  disabled={seat.isDisabled || seat.isBooked}\r\n                >\r\n                  {seat.id}\r\n                </button>\r\n                {!seat.isBooked && !seat.isDisabled && (\r\n                  <span className=\"mt-2 text-sm text-gray-600\">\r\n                    Rs. {seat.price}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Modal */}\r\n  {showModal && (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50\">\r\n      <div className=\"bg-white w-11/12 max-w-3xl rounded-xl shadow-2xl p-8 relative animate-fade-in\">\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={closeModal}\r\n          className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\r\n        >\r\n          &times;\r\n        </button>\r\n\r\n        <h3 className=\"text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">\r\n          Booking Details\r\n        </h3>\r\n\r\n        {/* Main Passenger Details */}\r\n        {mainPassenger && passengers[mainPassenger] && (\r\n          <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\r\n            <h4 className=\"text-xl font-semibold text-gray-700 mb-3\">\r\n              Main Passenger Details\r\n            </h4>\r\n            <p className=\"text-gray-600\">\r\n              <span className=\"font-semibold\">Name:</span>{\" \"}\r\n              {passengers[mainPassenger].name}\r\n            </p>\r\n            <p className=\"text-gray-600\">\r\n              <span className=\"font-semibold\">Email:</span>{\" \"}\r\n              {passengers[mainPassenger].email}\r\n            </p>\r\n            <p className=\"text-gray-600\">\r\n              <span className=\"font-semibold\">Phone:</span>{\" \"}\r\n              {passengers[mainPassenger].phone}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Other Passengers Details */}\r\n        {Object.entries(passengers)\r\n          .filter(([seatId]) => seatId !== mainPassenger)\r\n          .map(([seatId, passenger]) => (\r\n            <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\r\n              <h4 className=\"text-lg font-semibold text-gray-700 mb-2\">\r\n                Passenger for Seat {seatId}\r\n              </h4>\r\n              <p className=\"text-gray-600\">\r\n                <span className=\"font-semibold\">Name:</span>{\" \"}\r\n                {passenger.name || \"N/A\"}\r\n              </p>\r\n            </div>\r\n          ))}\r\n\r\n        <div className=\"space-y-3\">\r\n          <p className=\"text-gray-600\">\r\n            <span className=\"font-semibold\">From Location:</span> Delhi\r\n          </p>\r\n          <p className=\"text-gray-600\">\r\n            <span className=\"font-semibold\">To Location:</span> Mumbai\r\n          </p>\r\n          <p className=\"text-gray-600\">\r\n            <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\r\n          </p>\r\n          <p className=\"text-gray-600\">\r\n            <span className=\"font-semibold\">Drop Location:</span> Andheri West\r\n          </p>\r\n          <p className=\"text-gray-600\">\r\n            <span className=\"font-semibold\">Date of Trip:</span>{\" \"}\r\n            {new Date().toLocaleDateString()}\r\n          </p>\r\n          <p className=\"text-gray-600\">\r\n            <span className=\"font-semibold\">Seats Booked:</span>{\" \"}\r\n            {selectedSeats.map((seat) => seat.id).join(\", \")}\r\n          </p>\r\n          <p className=\"text-gray-600 text-lg font-medium\">\r\n            <span className=\"font-semibold\">Total Amount Payable:</span> Rs.{\" \"}\r\n            {totalAmount}\r\n          </p>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handlePayment}\r\n          className=\"mt-6 w-full py-3 px-6 bg-blue-600 text-white text-lg font-medium rounded-lg shadow-md hover:bg-blue-700 transition duration-300\"\r\n        >\r\n          Pay Now\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeatList;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}